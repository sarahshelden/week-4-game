// Psuedo Code
// a game with 4 crystals and random result
// every crystal needs to have a random number between 1-12
// a new random number should generate every single time we win or lost to those 4 crystals
// when clicking any crystal, it should be adding with the previous result
// until it equals the total score
// if it is gr4eater than the random result, we decrement a lost counter
// if it is equal to random result, we increment a win counter.

// var random_result;
// var lost = undefined;
// var win;
//
//
//
//
//   for(var i =0; i < 4; i++){
//       var crystal = $("<div>");
//
//       $(".crystals").append(crystal);
//          console.log("Hello World");
//
//
// }

// var wins = document.getElementById("wins")
// var losses = document.getElementById("losses")
// var yourScore = document.getElementById('score');
// //var yourScore = getElementById(blue, pink, orange, purple.onclick(math.sum));
// yourScore.innerHTML = 0; //
// var targetScore = document.getElementById('start');
// targetScore.innerHTML = getRandomValue(10, 4);
//
// function addToScore(val) {
//     var numberToAdd = parseInt(val);
//     var currentScore = parseInt(yourScore.innerHTML);
//     yourScore.innerHTML = numberToAdd + currentScore;
// }
//
// // crystals
// var blue = document.getElementById("blue")
// //red.setAttribute("value", "5");
// console.log(blue.value);
//
// var pink = document.getElementById("pink");
// console.log(pink.value);
//
// var orange = document.getElementById("orange");
// console.log(orange.value);
//
// var purple = document.getElementById("purple");
// console.log(purple.value)
//
// // add an event listener to elements
// blue.addEventListener('click', function() {
//     addToScore(this.value);
//     checkPlayerScore();
// });
//
//
// pink.addEventListener('click', function() {
//     // pink
//     addToScore(this.value);
//     checkPlayerScore();
// });
//
// orange.addEventListener('click', function() {
//     // orange
//     addToScore(this.value);
//     checkPlayerScore();
// });
//
// purple.addEventListener('click', function() {
//     //purple
//     addToScore(this.value);
//     checkPlayerScore();
// });
//
//
// function getRandomValue (a, b){
//     return Math.floor((Math.random() * a) + b);
// }
//
// function checkPlayerScore() {
//     //yourScore, targetScore (parseFloat() is for decimals)
//     var playerInt = parseInt(yourScore.innerHTML);
//     var targetInt = parseInt(targetScore.innerHTML);
//     if (playerInt === targetInt) {
//         alert('You win!');
//     } else if (playerInt > targetInt) {
//         alert('You lose!');
//     }
// }
//
// console.log(getRandomValue(10, 4));
//

//variables

var blueValue, pinkValue, orangeValue, purpleValue;
var wins = 0;
var losses = 0;
// target score is the random number generated by computer
var targetScore;
// yourScore is the  ongoing sum of gems picked
var yourScore;

// functions

// function that initializes the variables for each now round of the game
function initializeVariables() {
    // have computer pick a number between 19-120
    targetScore = 19 + Math.floor(Math.random() * 102);
    // pick random gem values between 1-12
    blueValue = 1 + Math.floor(Math.random() * 12);
    pinkValue = 1 + Math.floor(Math.random() * 12);
    orangeValue = 1 + Math.floor(Math.random() * 12);
    purpleValue = 1 + Math.floor(Math.random() * 12);
    // set initial value of user's ongoing gem selections sum to 0
    yourScore = 0;

    // update the html for the game board
    $("#wins").html("Wins: " + wins);
    $("#losses").html("Losses: " + losses);
    $("#start").html(targetScore);
    $("#score").html(yourScore);
    consoleLogVariables();
}

// function to check if user has won or lost
// increment wins / losses in either case
// and then re-initialize variables for new round
// if user hasn't won or lost then nothing happens

function hasUserWonOrLost() {
    // check if user has lost
    if (yourScore > targetScore) {
        ++losses;
        console.log("user lost");
        initializeVariables();
    }

    // check if user has won
    if (yourScore === targetScore) {
        ++ wins;
        console.log("user won");
        initializeVariables();
    }
}

// debugging functionality function

function consoleLogVariables() {
    console.log("wins: " + wins + " losses: " + losses);
    console.log("blue: " , blueValue + " pink: " + pinkValue + " orange: " + orangeValue + " purple: " + purpleValue);
    console.log("Target Score:" + targetScore + " Your Score: " + yourScore);
    console.log(".............");


}

initializeVariables();

// listen for clicks on any of the gems by targeting the gem class
$(".crystals").on("click", function() {
    // each gem has a value attribute of blue, pink, orange, or purple
    // use this attribute to identify which gem the user actually clicked
    var pressed = $(this).attr("value");
    console.log(pressed);
    // add the value of the gem to the user's ongoing score tally
    if (pressed === "blue") {
        yourScore += blueValue;
    } else if (pressed === "pink") {
        yourScore += pinkValue;
    } else if (pressed === "orange") {
        yourScore += orangeValue;
    } else if (pressed === "purple") {
        yourScore += purpleValue;
    } else {
        console.log("error");
    }
    // then update the html for the user score
    $("#start").html(targetScore);
    consoleLogVariables();
    // call the function to see if user has won or lost
    hasUserWonOrLost();
});

